AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  obwWebApp
  AWS SAM/CloudFormation Template for obwWebApp

Globals:
  Function:
    Timeout: 30
    Runtime: python3.13
    Architectures:
      - x86_64

Parameters:
  OpenAiApiKey:
    Type: String
    Description: "OpenAI API Key"
    NoEcho: true
  OpenAiVectorStoreId:
    Type: String
    Description: "OpenAI Vector Store ID"
    NoEcho: true
  TwilioAccountSid:
    Type: String
    Description: "Twilio Account SID"
    NoEcho: true
  TwilioAuthToken:
    Type: String
    Description: "Twilio Auth Token"
    NoEcho: true
  AiProcessingLambdaFunctionName:
    Type: String
    Description: "Name of the AI Processing Lambda function"
    Default: "obw-ai-processing-function"
  # ImmediateResponseFunction の Function URL が Outputs から取得される場合、
  # 最初は空文字をデフォルトにすることでエラーを防ぎ、後続のパイプラインで上書き
  ImmediateResponseFunctionUrlParam:
    Type: String
    Description: "Function URL for Immediate Response, provided from Outputs"
    Default: ""

Resources:
  LayerForObw:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: layer_for_obw
      Description: Common libraries for obwWebApp (Twilio, OpenAI, lingual-manager, etc.)
      ContentUri: layers/
      CompatibleRuntimes:
        - python3.13
      CompatibleArchitectures:
        - x86_64
      LicenseInfo: 'Available under the MIT license.'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: python3.13
      BuildArchitecture: x86_64

  ImmediateResponseFunction:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref LayerForObw
      FunctionName: obw-immediate-response-function
      MemorySize: 128
      CodeUri: lambda_functions/immediate-response/
      Handler: lambda_handler_immediate_response.lambda_handler
      SnapStart:
        ApplyOn: PublishedVersions
      AutoPublishAlias: live
      FunctionUrlConfig:
        AuthType: NONE
        Cors:
          AllowOrigins: [ "*" ]
          AllowMethods: [ "POST" ]
          AllowHeaders: [ "Content-Type" ]
      Environment:
        Variables:
          AI_PROCESSING_LAMBDA_NAME: !Ref AiProcessingLambdaFunctionName
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref AiProcessingLambdaFunctionName

  AiProcessingFunction:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref LayerForObw
      FunctionName: !Ref AiProcessingLambdaFunctionName
      MemorySize: 1024
      CodeUri: lambda_functions/ai_processing/
      Handler: lambda_handler_ai_processing.lambda_handler
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAiApiKey
          OPENAI_VECTOR_STORE_ID: !Ref OpenAiVectorStoreId
          TWILIO_ACCOUNT_SID: !Ref TwilioAccountSid
          TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
          LAMBDA1_FUNCTION_URL: !Ref ImmediateResponseFunctionUrlParam

  # S3バケットの作成
  PassportUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "privacy-obw-passport-upload"
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - http://localhost:5173
            AllowedMethods:
              - PUT
              - POST
              - GET
            AllowedHeaders:
              - "*"
            ExposedHeaders:
              - ETag
            MaxAge: 3000

  GetPresignedUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: obw-get-presigned-url-function
      MemorySize: 128
      CodeUri: lambda_functions/get_presigned_url/
      Handler: lambda_handler_get_presigned_url.lambda_handler
      Runtime: python3.13
      Timeout: 30
      Environment:
        Variables:
          UPLOAD_BUCKET: !Ref PassportUploadBucket
      FunctionUrlConfig:
        AuthType: NONE
        Cors:
          AllowOrigins:
            - http://localhost:5173
          AllowHeaders:
            - content-type
          AllowMethods:
            - POST
          AllowCredentials: false
      Policies:
        - S3WritePolicy:
            BucketName: !Ref PassportUploadBucket

Outputs:
  ImmediateResponseFunctionArn:
    Description: "ARN for Immediate Response function"
    Value: !GetAtt ImmediateResponseFunction.Arn
  AiProcessingFunctionArn:
    Description: "ARN for AI Processing function"
    Value: !GetAtt AiProcessingFunction.Arn
  GetPresignedUrlFunctionUrl:
    Description: "Function URL for GetPresignedUrl Lambda"
    Value: !GetAtt GetPresignedUrlFunction.Arn
  PassportUploadBucketName:
    Description: "S3 bucket for passport uploads"
    Value: !Ref PassportUploadBucket