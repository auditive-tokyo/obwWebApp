name: Deploy AppSync Lambda Functions

on:
  push:
    branches: [main, feature/*]
    paths:
      - 'lambda_functions/admin_approve_guest/**'
      - 'lambda_functions/get_presigned_url/**'
      - 'lambda_functions/request_access/**'
      - 'lambda_functions/transfer_room_guests/**'
      - 'lambda_functions/verify_access/**'
      - '.github/workflows/appsync-lambdas-deploy.yml'
      - 'template-appsync-lambdas.yaml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install AWS SAM CLI
        run: pip install aws-sam-cli

      - name: Ensure AppSync base stack exists (EnableLambdaIntegration=false)
        run: |
          set -e
          if ! aws cloudformation describe-stacks --stack-name obw-infra-appsync >/dev/null 2>&1; then
            echo "obw-infra-appsync not found. Deploying base stack..."
            aws cloudformation deploy \
              --template-file template-infra-appsync.yaml \
              --stack-name obw-infra-appsync \
              --capabilities CAPABILITY_NAMED_IAM \
              --parameter-overrides EnableLambdaIntegration=false \
              --no-fail-on-empty-changeset
          else
            echo "obw-infra-appsync exists. Skipping base deploy."
          fi

      - name: SAM Build
        run: sam build --template-file template-appsync-lambdas.yaml

      - name: SAM Deploy
        env:
          SENDGRID_API_KEY_FROM_SECRET: ${{ secrets.SENDGRID_API_KEY }}
        run: |
          sam deploy \
            --template-file .aws-sam/build/template.yaml \
            --stack-name obw-appsync-lambdas \
            --capabilities CAPABILITY_IAM \
            --resolve-s3 \
            --no-confirm-changeset \
            --parameter-overrides \
              SendGridApiKey="$SENDGRID_API_KEY_FROM_SECRET" \
            --no-fail-on-empty-changeset

      - name: Wait for Lambda exports (Function ARNs)
        run: |
          set -e
          for i in {1..15}; do
            COUNT=$(aws cloudformation list-exports \
              --query "length(Exports[?Name=='Obw-RequestAccessFunctionArn' || Name=='Obw-VerifyAccessTokenFunctionArn' || Name=='Obw-GetPresignedUrlFunctionArn' || Name=='Obw-AdminApproveGuestFunctionArn' || Name=='Obw-TransferRoomGuestsFunctionArn'])" \
              --output text || echo 0)
            if [ "$COUNT" -ge 5 ]; then
              echo "All Lambda exports found."
              break
            fi
            echo "Waiting for Lambda exports... ($i/15)"
            sleep 6
          done

      - name: Wait until AppSync stack is idle
        run: |
          for i in {1..20}; do
            STATUS=$(aws cloudformation describe-stacks --stack-name obw-infra-appsync --query "Stacks[0].StackStatus" --output text || echo "")
            echo "AppSync stack status: $STATUS"
            if [[ "$STATUS" != *"_IN_PROGRESS" ]]; then break; fi
            sleep 9
          done

      - name: Enable Lambda integration in AppSync
        run: |
          # Get Lambda ARNs from CloudFormation exports
          REQUEST_ARN=$(aws cloudformation list-exports --query "Exports[?Name=='Obw-RequestAccessFunctionArn'].Value" --output text)
          VERIFY_ARN=$(aws cloudformation list-exports --query "Exports[?Name=='Obw-VerifyAccessTokenFunctionArn'].Value" --output text)
          PRESIGNED_ARN=$(aws cloudformation list-exports --query "Exports[?Name=='Obw-GetPresignedUrlFunctionArn'].Value" --output text)
          APPROVE_ARN=$(aws cloudformation list-exports --query "Exports[?Name=='Obw-AdminApproveGuestFunctionArn'].Value" --output text)
          TRANSFER_ARN=$(aws cloudformation list-exports --query "Exports[?Name=='Obw-TransferRoomGuestsFunctionArn'].Value" --output text)
          
          echo "Enabling Lambda integration with ARNs:"
          echo "RequestAccessFunctionArn=${REQUEST_ARN}"
          echo "VerifyAccessTokenFunctionArn=${VERIFY_ARN}"
          echo "GetPresignedUrlFunctionArn=${PRESIGNED_ARN}"
          echo "AdminApproveGuestFunctionArn=${APPROVE_ARN}"
          echo "TransferRoomGuestsFunctionArn=${TRANSFER_ARN}"
          
          aws cloudformation deploy \
            --template-file template-infra-appsync.yaml \
            --stack-name obw-infra-appsync \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              EnableLambdaIntegration=true \
              RequestAccessFunctionArn=${REQUEST_ARN} \
              VerifyAccessTokenFunctionArn=${VERIFY_ARN} \
              GetPresignedUrlFunctionArn=${PRESIGNED_ARN} \
              AdminApproveGuestFunctionArn=${APPROVE_ARN} \
              TransferRoomGuestsFunctionArn=${TRANSFER_ARN} \
            --no-fail-on-empty-changeset